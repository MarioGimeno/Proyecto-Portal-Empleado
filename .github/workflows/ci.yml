name: CI for Android and Java Projects

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}  # Utiliza el PAT para la autenticación

      - name: Set up JDK 17 for Android
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./Proyecto_Portal_Empleado_Cliente/gradlew

      - name: Delete .gradle directory
        run: rm -rf ./Proyecto_Portal_Empleado_Cliente/.gradle

      - name: Clean build files
        working-directory: ./Proyecto_Portal_Empleado_Cliente
        run: ./gradlew clean

      - name: Build Android App
        working-directory: ./Proyecto_Portal_Empleado_Cliente
        run: ./gradlew assembleDebug

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}  # Utiliza el PAT para la autenticación

      - name: Set up JDK 17 for Java backend
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
  
      - name: Grant execute permission for mvnw
        run: chmod +x ./Proyecto_Portal_Empleado_Servidor/mvnw
  
      - name: Build Backend Server
        working-directory: ./Proyecto_Portal_Empleado_Servidor
        run: ./mvnw clean package

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Transfiere el archivo JAR al servidor
            scp ./Proyecto_Portal_Empleado_Servidor/target/Proyecto_Portal_Empleado-0.0.1-SNAPSHOT.jar ${USERNAME}@${HOSTNAME}:/path/to/your/server/directory
            # Reiniciar el servicio si es necesario (opcional)
            ssh ${USERNAME}@${HOSTNAME} 'sudo systemctl restart your-service-name'
