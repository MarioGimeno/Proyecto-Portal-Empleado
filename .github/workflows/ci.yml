name: CI for Android and Java Projects

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 for Android
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # Agregar permisos de ejecuci贸n a gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./Proyecto_Portal_Empleado_Cliente/gradlew

      # Eliminar el directorio .gradle antes de compilar
      - name: Delete .gradle directory
        run: rm -rf ./Proyecto_Portal_Empleado_Cliente/.gradle

      # Limpiar el directorio gradle antes de compilar
      - name: Clean build files
        working-directory: ./Proyecto_Portal_Empleado_Cliente
        run: ./gradlew clean

      # Compilar la aplicaci贸n Android
      - name: Build Android App
        working-directory: ./Proyecto_Portal_Empleado_Cliente
        run: ./gradlew assembleDebug

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up JDK 17 for Java backend
        uses: actions/setup-java@v1
        with:
          java-version: '17'
  
      # Agregar permisos de ejecuci贸n para mvnw
      - name: Grant execute permission for mvnw
        run: chmod +x ./Proyecto_Portal_Empleado_Servidor/mvnw
  
      # Compilar el backend
      - name: Build Backend Server
        working-directory: ./Proyecto_Portal_Empleado_Servidor
        run: ./mvnw clean package

      # Desplegar a EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/Proyecto-Portal-Empleado
            git pull origin main
            # Detener el proceso JAR en ejecuci贸n
            pkill -f 'Proyecto_Portal_Empleado-0.0.1-SNAPSHOT.jar' || true
            # Mover al directorio del servidor y compilar
            cd Proyecto_Portal_Empleado_Servidor
            mvn clean package
            # Iniciar el nuevo JAR
            nohup java -jar target/Proyecto_Portal_Empleado-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
            debug: true
